# This workflow builds DnDTools with Nuitka and uploads it to a GitHub Release manually
name: Build and Release DnDTools

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (example: v1.0.0)'
        required: true
        default: 'v2.0.0'

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: UI/requirements.txt

      - name: Install Nuitka and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka
          pip install -r UI/requirements.txt

      - name: Build executable with Nuitka
        shell: cmd
        run: |
          REM Ensure we're in the project root
          cd /d %GITHUB_WORKSPACE%

          REM Set PYTHONPATH to include UI so networking.protos is recognized
          set PYTHONPATH=%GITHUB_WORKSPACE%\UI

          REM Remove previous build folders if they exist
          rmdir /s /q build 2>nul

          REM Run Nuitka to compile the application into a single-file executable
          python -m nuitka ^
          --onefile ^
          --standalone ^
          --windows-icon-from-ico=UI\assets\logo.ico ^
          --include-data-dir=UI\networking\protos=networking/protos ^
          --include-data-dir=templates=templates ^
          --include-data-dir=static=static ^
          --include-data-dir=assets=assets ^
          --include-data-file=assets\equipment_slots.json=assets/equipment_slots.json ^
          --include-data-file=assets\npcap-1.82.exe=assets/npcap-1.82.exe ^
          --output-dir=dist ^
          --include-module=clr ^
          --remove-output ^
          --assume-yes-for-downloads ^
          --enable-plugin=no-qt ^
          --nofollow-import-to=tkinter ^
          --output-filename=DnDTools.exe ^
          --windows-console-mode=disable ^
          UI\app.py

          echo Build complete. Executable is in the dist folder.

      - name: Create GitHub Pre-Release and Upload executable
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: Release ${{ github.event.inputs.tag }}
          files: dist/DnDTools.exe
          fail_on_unmatched_files: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
